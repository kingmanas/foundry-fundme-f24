// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

import {Test , console} from "lib/forge-std/src/Test.sol";
import {FundMe} from "../src/FundMe.sol";
import {PriceConvertor} from "../src/PriceConvertor.sol";
import {DeployFundMe , WithdrawFundMe} from "../script/DeployFundMe.s.sol";
import {FundFundMe} from "../script/Interactions.s.sol";

contract FundMeTestIntegration is Test {
     FundMe fundMe;
   address USER = makeAddr("user");
   uint256 constant SEND_VALUE = 1 ether;
   uint256 constant STARTING_BALANCE = 10 ether;
   uint256 constant GAS_PRICE = 1;

   function setUp() external { //setUp always runs first.
      DeployFundMe deployFundMe = new DeployFundMe();
      fundMe = deployFundMe.run();
      vm.deal(USER , STARTING_BALANCE);
}

function testUserCanFundInteractions() public {
    FundFundMe fundFundMe = new FundFundMe();
    vm.prank(USER);
    vm.deal(USER,1e18);
    fundFundMe.fundFundme(address(fundMe));

    address funder = fundMe.getFunder(0);
    assertEq(funder , USER);
}

}